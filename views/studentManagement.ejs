<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Admin - User Management</title>
  <link rel="stylesheet" href="/css/studentManagement.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
 
  <!-- Header -->
  <header>
    <h2>ðŸ‘¥ Student Management</h2>
    <button onclick="logout()">Logout</button>
  </header>


 <div class="container">

    <!-- <div class="search-box">
      <input type="text" id="searchInput" placeholder="Search by username or email..." onkeyup="searchUser()">
    </div> -->

    <table id="userTable">
      <thead>
        <tr  >
          <th>Student ID</th>
          <th>Student Name</th>
          <th>Age</th>
          <th>Email</th>
          <th>Course</th>
          <th>Phone</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% students.forEach((student, index)=> { %>
          <tr id="row_<%- student._id %>">
            <td>
              <%= student._id.toString().slice(-6) %>
            </td>
            <td>
              <span id="name_<%- student._id %>">
                <%= student.name ||'' %>
              </span>
            </td>
            <td>
              <span id="age_<%- student._id %>">
                <%= student.age %>
              </span>
            </td>
            <td>
              <span id="email_<%- student._id %>">
                <%= student.email %>
              </span>

            </td>
            <td>
              <span id="course_<%- student._id %>">
                <%= student.course||'' %>
              </span>

            </td>
            <td>
              <span id="phone_<%- student._id %>">
                <%= student.phone||"" %>
              </span>
            </td>
            <td>

              <button onclick="editStudent('<%- student._id %>')" type="button" class="btn btn-primary"
                data-bs-toggle="modal" data-bs-target="#editStudentModal">
                Edit Student
              </button>


              <button class="btn bg-danger text-white btn-delete"
                onclick="deleteUser('<%= student._id %>')">Delete</button>
            </td>
          </tr>
          <% }) %>
      </tbody>

    </table>

    <!-- edit modal -->

    <div class="modal fade" id="editStudentModal" tabindex="-1" aria-labelledby="editStudentLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">

          <div class="modal-header">
            <h5 class="modal-title" id="editStudentLabel">Edit Student</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>

          <div class="modal-body">
            <form id="editStudentForm" method="post" action="/admin/editStudent">
              <div class="mb-3">
                <label for="studentName" class="form-label">Name</label>
                <input type="text" class="form-control" name="name" id="studentName" placeholder="">
              </div>
              <div class="mb-3">
                <label for="studentEmail" class="form-label">Email</label>
                <input type="email" class="form-control" name="email" id="studentEmail" placeholder="Enter email">
              </div>
              <input hidden value="" name="studentId" id="studentId" type="text">
              <div class="mb-3">
                <label for="studentPhone" class="form-label">Phone</label>
                <input type="text" name="phone" class="form-control" id="studentPhone" placeholder="Enter phone">
              </div>
              <div class="mb-3">
                <label for="studentAge" class="form-label">Age</label>
                <input type="number" name="age" class="form-control" id="studentAge" placeholder="Enter age">
              </div>
              <div class="mb-3">
                <label for="studentCourse" class="form-label">Course</label>
                <input type="text" name="course" class="form-control" id="studentCourse" placeholder="Enter age">
              </div>

              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-success">Save Changes</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    function editStudent(studentId) {


      fetch(`/admin/getStudent/${studentId}`, { method: "GET" })

        .then(res => res.json())
        .then(data => {

          if (data && data.student) {
            console.log(data.student)
            let student = data.student;
            document.getElementById('studentName').value = student.name
            document.getElementById('studentEmail').value = student.email
            document.getElementById('studentPhone').value = student.phone
            document.getElementById('studentAge').value = student.age
            document.getElementById('studentId').value = student._id
            document.getElementById('studentCourse').value = student.course
          } else {
            Swal.fire(data.message)
          }
        }).catch(err => {

          Swal.fire(data.message || 'Server Error')
        })

    }

    const editForm = document.getElementById('editStudentForm')


    editForm.addEventListener('submit', function (e) {
      e.preventDefault()
      console.log('edit form submitted');
      const formData = new FormData(editForm)

      const formObject = Object.fromEntries(formData.entries());
      console.log('form object', formObject);

      let studentId = document.getElementById('studentId').value


      fetch(`/admin/editStudent/${studentId}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(formObject)
      }).then(res => res.json())
        .then(data => {
          if (data && data.success) {
            Swal.fire({
              //position: "top-end",
              icon: "success",
              title: data.message,
              showConfirmButton: false,
              timer: 1000
            })
            console.log('data.student', data.student);
            let student = data.student
            let nameSpan = document.getElementById(`name_${student._id}`)
            nameSpan.innerHTML = student.name
            let emailSpan = document.getElementById(`email_${student._id}`)
            emailSpan.innerHTML = student.email
             document.getElementById(`phone_${student._id}`).innerHTML=student.phone
            document.getElementById(`age_${student._id}`).innerHTML=student.age
            document.getElementById(`course_${student._id}`).innerHTML=student.course

            let modalElement = document.getElementById('editStudentModal');
            let modalInstance = bootstrap.Modal.getInstance(modalElement);
            modalInstance.hide();
          } else {
            Swal.fire(data.message)
          }
        }).catch(err => {
          console.log(err);
          Swal.fire(err.message || 'Server Error')
        })
    })

    function deleteUser(studentId){
      console.log('student id ',studentId);

      Swal.fire({
  title: "Are you sure?",
  text: "You won't be able to revert this!",
  icon: "warning",
  showCancelButton: true,
  confirmButtonColor: "#3085d6",
  cancelButtonColor: "#d33",
  confirmButtonText: "Yes, delete it!"
}).then((result) => {
  if (result.isConfirmed) {
    fetch(`/admin/deleteStudent/${studentId}`,{
      method:'DELETE',

    }).then(res=>res.json())
    .then(data=>{
      if(data&& data.success){
         Swal.fire({
      title: "Deleted!",
      text: "Your file has been deleted.",
      icon: "success"
    })

    let row=document.getElementById(`row_${studentId}`)
    row.remove()
      }else{
        Swal.fire(data.message)
      }
    }).catch(err=>{
      Swal.fire(err.message||"Server Error")
    })
   
  }
});
      
    }

    function searchUser() {
      let input = document.getElementById("searchInput").value.toLowerCase();
      let rows = document.querySelectorAll("#userTable tbody tr");
      rows.forEach(row => {
        let username = row.cells[1].textContent.toLowerCase();
        let email = row.cells[2].textContent.toLowerCase();
        if (username.includes(input) || email.includes(input)) {
          row.style.display = "";
        } else {
          row.style.display = "none";
        }
      });
    }

    function logout() {
      // Redirect to login page or clear session
      alert("Logged out successfully!");
      window.location.href = "/admin/login";
    }
  </script>
</body>

</html>